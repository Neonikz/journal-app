{"version":3,"sources":["firebase/firebaseConfig.js","components/types/types.js","actions/ui.js","helpers/loadNotes.js","helpers/fileUpload.js","actions/notes.js","actions/auth.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/routers/AppRouter.js","components/reducers/uiReducer.js","components/routers/notesReducer.js","components/store/store.js","components/reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","finishLoading","loadNotes","uid","a","collection","get","notesSnap","notes","forEach","snapSon","push","id","data","fileUpload","file","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","activeNote","note","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","e","message","logout","JournalEntry","date","day","moment","useDispatch","className","onClick","style","backgroundSize","backgroundImage","format","JournalEntries","useSelector","state","map","Sidebar","name","signOut","newNote","Date","getTime","add","useForm","initialState","useState","values","setValues","reset","newState","handleInputChange","target","value","NotesAppBar","active","display","onChange","files","text","allowOutsideClick","didOpen","showLoading","fileUrl","close","position","icon","showConfirmButton","timer","startUploading","document","querySelector","click","NoteScreen","formValues","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startDeleting","NothingSelected","JournalScreen","LoginScreen","loading","ui","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","validator","isEmail","length","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setCheking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","exact","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d325634b.chunk.js","sourcesContent":["import firebase from 'firebase/app'; \r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDt4Q_mll4WEUp3zdHVjzxUZQPd4BC9vzw\",\r\n    authDomain: \"journal-app-46b85.firebaseapp.com\",\r\n    projectId: \"journal-app-46b85\",\r\n    storageBucket: \"journal-app-46b85.appspot.com\",\r\n    messagingSenderId: \"1036633891797\",\r\n    appId: \"1:1036633891797:web:77049760e8f0c26d12535c\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {\r\n    db,\r\n    googleAuthProvider,\r\n    firebase\r\n}","\r\n\r\nexport const types = {\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n    \r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New Note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load Note',\r\n    notesUpdated: '[Notes] Updated Note',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout cleaning',\r\n}","import { types } from \"../components/types/types\";\r\n\r\n\r\nexport const setError = err => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading,\r\n});","import { db } from '../firebase/firebaseConfig';\r\n\r\n\r\nexport const loadNotes = async uid  => {\r\n\r\n    const notesSnap = await db.collection(`${ uid }/journal/notes`).get();\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapSon => {\r\n        notes.push({\r\n            id: snapSon.id,\r\n            ...snapSon.data()\r\n        })\r\n    });\r\n\r\n    return notes;\r\n}","\r\n\r\nexport const fileUpload = async file => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/drkjhfikw/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append('upload_preset','react-journal'); \r\n    formData.append('file', file); \r\n\r\n    try{\r\n        const resp = await fetch( cloudUrl, {\r\n            method:'POST',\r\n            body: formData\r\n        });\r\n\r\n        if ( resp.ok ) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        }else{\r\n            throw await resp.json();\r\n        }\r\n\r\n    }catch (error){\r\n        throw error;\r\n    }\r\n\r\n\r\n    // return\r\n}","import { db } from \"../firebase/firebaseConfig\";\r\nimport { types } from '../components/types/types';\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport Swal from \"sweetalert2\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\n\r\n//react-journal\r\n\r\nexport const startNewNote = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${ uid }/journal/notes`).add( newNote );\r\n\r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const addNewNote = ( id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = uid => {\r\n    return async( dispatch ) => {\r\n        const notes = await loadNotes( uid );\r\n        dispatch( setNotes( notes ));\r\n    }\r\n}\r\n\r\nexport const setNotes = notes => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\n\r\nexport const startSaveNote = note => {\r\n    return async( dispatch, getState ) => {\r\n        \r\n        const { uid } = getState().auth;\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${ uid }/journal/notes/${ note.id }`).update( noteToFirestore );\r\n\r\n        dispatch( refreshNote( note.id, note ) );\r\n\r\n        Swal.fire('Saved', note.title,'success');\r\n    }\r\n}\r\n\r\n\r\nexport const refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdated,\r\n    payload:{\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = file => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n            allowOutsideClick: false,\r\n            didOpen: () => {\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) )\r\n        \r\n        Swal.close();\r\n        Swal.fire({\r\n            position: 'center',\r\n            icon: 'success',\r\n            title: 'Your image has been saved',\r\n            showConfirmButton: false,\r\n            timer: 1500\r\n        })\r\n    }\r\n}\r\n\r\nexport const startDeleting = id => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const uid = getState().auth.uid;\r\n        await db.doc(`${uid}/journal/notes/${ id }`).delete();\r\n\r\n        dispatch( deleteNote( id ) );\r\n\r\n    }\r\n}\r\n\r\nexport const deleteNote = id => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n\r\n})\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})","import Swal from 'sweetalert2';\r\nimport { firebase, googleAuthProvider } from '../firebase/firebaseConfig';\r\nimport { types } from \"../components/types/types\";\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\nexport const startLoginEmailPassword = ( email, password) => {\r\n    return ( dispatch ) => {\r\n\r\n        dispatch( startLoading() );\r\n\r\n        firebase.auth().signInWithEmailAndPassword( email, password )\r\n            .then( ({user}) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n                dispatch( finishLoading() );\r\n                Swal.fire(\r\n                    'Great!',\r\n                    'Login successful',\r\n                    'success'\r\n                )\r\n            })\r\n            .catch( e => {\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Fail', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name) => {\r\n    return ( dispatch ) => {\r\n        firebase.auth().createUserWithEmailAndPassword( email, password )\r\n            .then( async({ user }) => {\r\n\r\n                await user.updateProfile({ displayName: name});\r\n                \r\n               \r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n            })\r\n            .catch( e => {\r\n                Swal.fire('Fail', e.message, 'error');\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return ( dispatch ) => {\r\n\r\n        firebase.auth().signInWithPopup( googleAuthProvider )\r\n            .then( ({ user, }) => {\r\n                dispatch(\r\n                    login( user.uid, user.displayName )\r\n                )\r\n                Swal.fire(\r\n                    'Great!',\r\n                    'Login successful',\r\n                    'success'\r\n                )\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async( dispatch ) => {\r\n        await firebase.auth().signOut()\r\n        dispatch( logout() );\r\n        dispatch( noteLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import React from 'react'\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/notes';\r\n\r\n\r\n\r\nexport const JournalEntry = ( {id, date, title, body, url} ) => {\r\n    \r\n    const day = moment(date);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleEntryClick = () => {\r\n            dispatch( activeNote( id, {\r\n                date, title, body, url\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn animate_faster\"\r\n            onClick={ handleEntryClick }\r\n        >\r\n            \r\n            {   \r\n                url &&\r\n                <div \r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${ url })`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-tittle\">\r\n                   { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>   \r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{day.format(\"dddd\")}</span>\r\n                <h4>{day.format(\"Do\")}</h4>\r\n            </div>     \r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            \r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry \r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector( state => state.auth );\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5\">\r\n                    <i className=\"far fa-user\"></i>\r\n                    <span> {name}</span>\r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout } \r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n\r\n            <div \r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                <p className=\"mt-5\">\r\n                    New Entry\r\n                </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n\r\n        </aside>\r\n    )\r\n}\r\n","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newState = initialState ) => {\r\n        setValues( newState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\nimport moment from 'moment';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {active} = useSelector( state => state.notes );\r\n    \r\n    const {date} = active;\r\n    const day = moment(date);\r\n\r\n    \r\n    const handleSave = () => {\r\n        dispatch( startSaveNote(active) );\r\n    }\r\n\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click()\r\n    }\r\n\r\n    const handleFileChange = e => {\r\n        const file = e.target.files[0];\r\n\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__app-bar\">\r\n            <span>{day.format(\"YYYY-MM-DD\")}</span>\r\n\r\n            <input \r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name=\"file\"\r\n                style={{ display:'none' }}\r\n                onChange={ handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handlePictureClick }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active:note } = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => {\r\n        if ( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset])\r\n\r\n    useEffect(() => {\r\n\r\n        dispatch( activeNote( formValues.id, {...formValues} ) );\r\n\r\n    }, [formValues, dispatch])\r\n\r\n    const handleDelete = () => {\r\n        dispatch( startDeleting( id ) );\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content animate__animated animate__fadeInDownBig animate_faster\">\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n                \r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happened today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    <div className=\"notes__image\">\r\n                        <img \r\n                            src={ note.url }\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                Select something\r\n                <br />\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Sidebar } from './Sidebar'\r\nimport { NoteScreen } from '../notes/NoteScreen.js';\r\nimport { useSelector } from 'react-redux';\r\nimport { NothingSelected } from './NothingSelected'\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector( state => state.notes );\r\n\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate_faster\">\r\n            \r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                        ? ( <NoteScreen /> )\r\n                        : ( <NothingSelected /> )\r\n                }\r\n\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\nimport { useForm } from '../../hooks/useForm'\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { loading } = useSelector( state => state.ui );\r\n\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword( email , password ) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__tittle mb-5\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin }\r\n                className=\"animate__animated animate__fadeIn animate_faster\"\r\n            >\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                \r\n                <div className=\"auth__social-networks mt-5 mb-5\">\r\n                    <p>Login with social networks</p>\r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick={ handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                            <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: '',\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( isFormValid() ){\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) );\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( !name ) {\r\n            dispatch( setError('Name is required') );\r\n            Swal.fire(\r\n                'Fail!',\r\n                msgError,\r\n                'error'\r\n            )\r\n            return false;\r\n        }else if ( !validator.isEmail( email ) ){\r\n            dispatch( setError('Email is not valid') );\r\n            Swal.fire(\r\n                'Fail!',\r\n                msgError,\r\n                'error'\r\n            )\r\n            return false;\r\n        }else if ( password !== password2 || password.length < 5 ){\r\n            dispatch( setError('Password should be at least 6 characters and match each other'));\r\n            Swal.fire(\r\n                'Fail!',\r\n                msgError,\r\n                'error'\r\n            )\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        Swal.fire(\r\n            'Great!',\r\n            'User created successfully',\r\n            'success'\r\n        )\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__tittle mb-5\">Register</h3>\r\n\r\n            <form \r\n                onSubmit={handleRegister}\r\n                className=\"animate__animated animate__fadeIn animate_faster\"\r\n            >\r\n\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={name}\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={email}\r\n                    onChange={ handleInputChange }\r\n                />\r\n                \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={password}\r\n                    onChange={ handleInputChange }\r\n                />\r\n                \r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={password2}\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already register?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport { LoginScreen } from '../auth/LoginScreen'\r\nimport { RegisterScreen } from '../auth/RegisterScreen'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route path=\"/auth/login\" component={ LoginScreen } />\r\n                    <Route path=\"/auth/register\" component={ RegisterScreen } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Route { ...rest } \r\n            component={ props => (\r\n                (isAuthenticated)\r\n                    ? <Component { ...props } />\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n\r\n        \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route { ...rest } \r\n            component={ props => (\r\n                (isAuthenticated)\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : <Component { ...props } />\r\n            )}\r\n\r\n        \r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect,\r\n  } from \"react-router-dom\";\r\nimport {firebase} from '../../firebase/firebaseConfig';\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../../actions/notes';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ checking , setCheking] = useState( true );\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false )\r\n\r\n    useEffect(() => {\r\n        \r\n        firebase.auth().onAuthStateChanged( async(user) => {\r\n            \r\n            if ( user?.uid ) {\r\n                dispatch( login( user.uid, user.displayName ) )\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch( startLoadingNotes( user.uid ) );\r\n            }else{\r\n                setIsLoggedIn( false );\r\n            }\r\n\r\n            setCheking( false );\r\n        } );\r\n\r\n    }, [dispatch, setCheking, setIsLoggedIn]);\r\n\r\n    if ( checking ) {\r\n        return( \r\n            <h1>Wait...</h1>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute isAuthenticated={isLoggedIn} path=\"/auth\" component={ AuthRouter } />\r\n                    <PrivateRoute exact isAuthenticated={isLoggedIn} path=\"/\" component={ JournalScreen } />\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action  ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return{\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return{\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n} ","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\n\r\nexport const notesReducer = ( state = initialState, action ) => {\r\n    \r\n    switch ( action.type ) {\r\n        case types.notesActive:\r\n            return{\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return{\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }    \r\n\r\n        case types.notesLoad:\r\n            return{\r\n                ...state,\r\n                notes: [ ...action.payload ]\r\n            }\r\n\r\n        case types.notesUpdated:\r\n            return{\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n            \r\n        case types.notesDelete:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return{\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\nimport { notesReducer } from '../routers/notesReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);\r\n\r\n","import { types } from \"../types/types\";\r\n/*\r\n        uai: 1252151251\r\n        name: 'Nico'\r\n*/\r\nexport const authReducer = ( state = {} , action ) => {\r\n\r\n    switch( action.type ){\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName\r\n            };\r\n\r\n        case types.logout:\r\n            return { };\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './components/routers/AppRouter'\r\nimport { store } from './components/store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { JournalApp } from './JournalApp';\nimport './styles/styles.scss';\n\n\nReactDOM.render(\n    <JournalApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}